name: Build Docker image and push it to Docker Hub

on:
  push:
    branches:
      - 'main'
  release:
    types:
      - released-

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Retrieve desired release version
        run: |
          git config --global --add safe.directory '*'
          git describe --exact-match --tags HEAD > /dev/null 2>&1 && \
          echo "app_version_oci=$(git describe --exact-match --tags HEAD)" >> "$GITHUB_ENV" || \
          echo "app_version_oci=0.0.0-test_$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: berkitamas/dockerhub-ratelimit-exporter
          tags: type=sha,format=long

      - name: Build and Push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: true
          sbom: true
          platforms: linux/amd64,linux/arm64
          tags: berkitamas/dockerhub-ratelimit-exporter:${{ env.app_version_oci }},berkitamas/dockerhub-ratelimit-exporter:latest

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
